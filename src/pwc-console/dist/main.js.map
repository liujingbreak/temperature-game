{"version":3,"sources":["main.ts"],"names":[],"mappings":";;;;;;AAAA,4BAA4B;AAC5B,+CAAyD;AACzD,8CAAiE;AACjE,wDAAgC;AAChC,mDAAmD;AACnD,kDAA0B;AAE1B,SAAgB,KAAK;IACnB,MAAM,EAAE,GAAG,kBAAQ,CAAC,eAAe,CAAC;QAClC,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,MAAM,EAAE,OAAO,CAAC,MAAM;KACvB,CAAC,CAAC;IAEH,sBAAQ,EAAE,CAAC,IAAI,CACb,gCAAoB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,WAAW,KAAK,EAAE,CAAC,WAAW;QAChE,EAAE,CAAC,SAAS,CAAC,SAAS,KAAK,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,EACpD,eAAG,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC,CACxF,CAAC,SAAS,EAAE,CAAC;IAEd,sBAAQ,EAAE,CAAC,IAAI,CACb,eAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAC3B,gCAAoB,EAAE,EACtB,kBAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,EAC1B,eAAG,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CACzC,CAAC,SAAS,EAAE,CAAC;IAEd,sBAAQ,EAAE,CAAC,IAAI,CACb,eAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EACjB,gCAAoB,EAAE,EACtB,kBAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,EAC1B,eAAG,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CACxC,CAAC,SAAS,EAAE,CAAC;IAEd,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IAEtC,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE;QACtB,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,MAAM,EAAE;YACV,8BAAgB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;SAC3C;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;QACnB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,CAAC,IAAI,EAAE,CAAC;IACjB,CAAC,CAAC,CAAC;AAEL,CAAC;AAxCD,sBAwCC","file":"main.js","sourcesContent":["// tslint:disable no-console\nimport {actionDispatcher, getStore} from './state.slice';\nimport {map, filter, distinctUntilChanged} from 'rxjs/operators';\nimport readline from 'readline';\n// import {initProcess} from '@wfh/plink/wfh/dist';\nimport chalk from 'chalk';\n\nexport function start() {\n  const rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n  });\n\n  getStore().pipe(\n    distinctUntilChanged((s1, s2) => s1.temperature === s2.temperature &&\n      s1._computed.direction === s2._computed.direction),\n    map(s => console.log(`Current temperature: ${s.temperature} ${s._computed.direction}`))\n  ).subscribe();\n\n  getStore().pipe(\n    map(s => s._computed.alert),\n    distinctUntilChanged(),\n    filter(msg => msg != null),\n    map(msg => console.log(chalk.cyan(msg)))\n  ).subscribe();\n\n  getStore().pipe(\n    map(s => s.error),\n    distinctUntilChanged(),\n    filter(msg => msg != null),\n    map(msg => console.log(chalk.red(msg)))\n  ).subscribe();\n\n  console.log('Input new temperature:');\n\n  rl.on('line', (input) => {\n    const answer = input.trim();\n    if (answer) {\n      actionDispatcher.inputTemperature(answer);\n    }\n  });\n\n  rl.on('SIGINT', () => {\n    console.log('Bye.');\n    process.exit();\n  });\n\n}\n\n"]}